services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
    ports:
      - "5433:5432"
    volumes:
      - ./database/volumes/postgres/17/data:/var/lib/postgresql/data
    networks:
      - bountyboard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://postgres:1@postgres:5432/postgres
      - DEBUG=True
      - SECRET_KEY=development_secret_key_change_in_production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bountyboard-network
    command: python manage.py runserver 0.0.0.0:8000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://bountyboard.kybiu.com/api
#      - NODE_ENV=development
#      - REACT_APP_API_URL=http://localhost:8000/api
      - HOST=0.0.0.0
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    depends_on:
      - backend
    networks:
      - bountyboard-network
    command: npm start

networks:
  bountyboard-network:
    driver: bridge